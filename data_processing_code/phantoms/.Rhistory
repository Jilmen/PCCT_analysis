var(v)
len(v)
length(v)
mu_v = mean(v)
mu_v
tmp = (v-mu_v)^2
tmp
3^2
sum(tmp)/7
var(v)
data_summary <- data %>% group_by(density) %>% summarise(mean_HU = mean(HU), variance = var(HU), N = length(HU))
View(data_summary)
?tinv
?qt
?qn
?qp
View(data_summary)
qt(0.95,703607)
qnorm(0.95)
q<-qnorm(0.95)
pnorm(q)
qnorm(0.95)
qnorm(0.95,lower.tail=FALSE)
?qnorm
qnorm(0.025, lower.tail=FALSE)
q<-qnorm(0.025, lower.tail=FALSE)
pnorm(q)
?CI
sqrt(9)
data_summary <- data %>% group_by(density) %>% summarise(mean_HU = mean(HU), variance = var(HU), N = length(HU)) %>%
mutate(t=qt(0.975, N-1)) %>%
CImax = mean_HU +t*sqrt(variance/N) %>%
CImin = mean_HU -t*sqrt(variance/N)
data_summary <- data %>% group_by(density) %>% summarise(mean_HU = mean(HU), variance = var(HU), N = length(HU)) %>%
mutate(t=qt(0.975, N-1)) %>%
mutate(CImax = mean_HU +t*sqrt(variance/N)) %>%
mutate(CImin = mean_HU -t*sqrt(variance/N))
View(data_summary)
data_summary <- data %>% group_by(density) %>% summarise(mean_HU = mean(HU), variance = var(HU), SD = sd(HU), N = length(HU)) %>%
mutate(t=qt(0.975, N-1)) %>%
mutate(CImax = mean_HU +t*SD/sqrt(N)) %>%
mutate(CImin = mean_HU -t*SD/sqrt(N))
View(data_summary)
?geom_smooth
rm(ls=list())
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
data_path <- 'D:/PCCT_data/phantoms/EFP/'
print('Reading input files EFP1...')
print('0/4...')
df50 <- read.table(paste0(data_path, '50mgHA.txt'),col.names='HU')
print('1/4...')
df100 <- read.table(paste0(data_path, '100mgHA.txt'),col.names='HU')
print('2/4...')
df200 <- read.table(paste0(data_path, '200mgHA.txt'),col.names='HU')
print('3/4...')
df800 <- read.table(paste0(data_path, '800mgHA.txt'),col.names='HU')
print('4/4... Done')
df50$density = 50
df100$density = 100
df200$density = 200
df800$density = 800
data1 <- rbind(df50,df100,df200,df800)
data1$phantom = 'EFP_SharpKernel'
data_path <- 'D:/PCCT_data/phantoms/EFP2/'
print('Reading input files EFP2...')
print('0/4...')
df50 <- read.table(paste0(data_path, '50mgHA.txt'),col.names='HU')
print('1/4...')
df100 <- read.table(paste0(data_path, '100mgHA.txt'),col.names='HU')
print('2/4...')
df200 <- read.table(paste0(data_path, '200mgHA.txt'),col.names='HU')
print('3/4...')
df800 <- read.table(paste0(data_path, '800mgHA.txt'),col.names='HU')
print('4/4... Done')
df50$density = 50
df100$density = 100
df200$density = 200
df800$density = 800
data2 <- rbind(df50,df100,df200,df800)
data2$phantom = 'EFP_WideKernel'
data <- rbind(data1, data2)
data_summary <- data %>% group_by(density, phantom) %>% summarise(mean_HU = mean(HU), variance = var(HU), SD = sd(HU), N = length(HU)) %>%
mutate(t=qt(0.975, N-1)) %>%
mutate(CImax = mean_HU +t*SD/sqrt(N)) %>%
mutate(CImin = mean_HU -t*SD/sqrt(N))
View(data_summary)
source("~/PCCT_analysis/data_processing_code/phantoms/phantom_calibration.R")
data_summary <- data %>% group_by(density, phantom) %>% summarise(mean_HU = mean(HU), variance = var(HU), SD = sd(HU), N = length(HU)) %>%
mutate(t=qt(0.975, N-1)) %>%
mutate(CImax = mean_HU +t*SD/sqrt(N)) %>%
mutate(CImin = mean_HU -t*SD/sqrt(N))
View(data_summary)
g_boxplot <- ggplot(data, aes(x = factor(density), y = HU)) +
geom_boxplot(aes(fill=phantom)) +
labs(x = 'Mineral density [mgHA/cm³]', y = 'Houndsfield Unit')
g_curve <- ggplot(data, aes(x=density, y = HU)) +
geom_point(data=data_smooth, aes(x=mean_HU, y=density, color=phantom)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1, aes(color=phantom))
g_curve <- ggplot(data, aes(x=density, y = HU)) +
geom_point(data=data_summary, aes(x=mean_HU, y=density, color=phantom)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1, aes(color=phantom))
g_boxplot
g_curve
g_curve <- ggplot(data, aes(x=HU, y = density)) +
geom_point(data=data_summary, aes(x=mean_HU, y=density, color=phantom)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1, aes(color=phantom))
g_curve
g_curve <- ggplot(data, aes(x=HU, y = density)) +
geom_point(data=data_summary, aes(x=mean_HU, y=density, color=phantom)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1, aes(color=phantom))+
geom_errorbarh(data = data_summary, aes(xmin = CImin, xmax = CImax))
g_curve
View(data_summary)
g_curve <- ggplot(filter(data,phantom=='EFP_SharpKernel'), aes(x=HU, y = density))
g_curve <- ggplot(filter(data,phantom=='EFP_SharpKernel'), aes(x=HU, y = density)) +
geom_point(data=data_summary, aes(x=mean_HU, y=density, color=phantom)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1, aes(color=phantom))+
geom_errorbarh(data = data_summary, aes(xmin = CImin, xmax = CImax))
g_curve
g_curve <- ggplot(filter(data,phantom=='EFP_SharpKernel'), aes(x=HU, y = density)) +
geom_point(data=data_summary, aes(x=mean_HU, y=density, color=phantom)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1, aes(color=phantom))
g_curve
View(data_summary)
g_curve <- ggplot(data, aes(x=HU, y = density)) +
geom_point(data=data_summary, aes(x=mean_HU, y=density, color=phantom)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1, aes(color=phantom))
g_curve
g_boxplot
View(data_summary)
View(data_summary)
data_summary <- data %>% group_by(density, phantom) %>% summarise(mean_HU = mean(HU), variance = var(HU), SD = sd(HU), N = length(HU)) %>%
mutate(t=qt(0.975, N-1)) %>%
mutate(CImax = mean_HU +t*SD/sqrt(N)) %>%
mutate(CImin = mean_HU -t*SD/sqrt(N))
g_boxplot <- ggplot(data, aes(x = factor(density), y = HU)) +
geom_boxplot(aes(fill=phantom)) +
labs(x = 'Mineral density [mgHA/cm³]', y = 'Houndsfield Unit')
g_curve <- ggplot(data, aes(x=density, y = HU)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1, aes(color=phantom)) +
geom_point(data=data_summary, aes(x=density, y=mean_HU, color=phantom)) +
geom_errorbar(data=data_summary, aes(ymin = mean_HU-SD, ymax=mean_HU+SD), width=0.2)
g_curve
data<-data1
View(data)
data_summary <- data %>% group_by(density, phantom) %>% summarise(mean_HU = mean(HU), variance = var(HU), SD = sd(HU), N = length(HU)) %>%
mutate(t=qt(0.975, N-1)) %>%
mutate(CImax = mean_HU +t*SD/sqrt(N)) %>%
mutate(CImin = mean_HU -t*SD/sqrt(N))
View(data_summary)
g_curve <- ggplot(data, aes(x=density, y = HU)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1) +
geom_point(data=data_summary, aes(x=density, y=mean_HU)) +
geom_errorbar(data=data_summary, aes(ymin = mean_HU-SD, ymax=mean_HU+SD), width=0.2)
g_curve
View(data_summary)
g_curve <- ggplot(data, aes(x=density, y = HU)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1) +
geom_point(data=data_summary, aes(x=density, y=mean_HU)) +
geom_errorbar(data=data_summary, aes(ymin = -SD, ymax=+SD), width=0.2)
g_curve
g_curve <- ggplot(data, aes(x=density, y = HU)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1) +
geom_point(data=data_summary, aes(x=density, y=mean_HU))
g_curve
g_curve <- ggplot(data_summary, aes(x=density, y = HU)) +
geom_point(aes(x=density, y=mean_HU)) +
geom_errorbar(data=data_summary, aes(ymin = -SD, ymax=+SD), width=0.2)
g_curve
g_curve <- ggplot(data_summary, aes(x=density, y = mean_HU)) +
geom_point(aes(x=density, y=mean_HU)) +
geom_errorbar(aes(ymin = -SD, ymax=+SD), width=0.2)
g_curve
g_curve <- ggplot(data_summary, aes(x=density, y = mean_HU)) +
geom_point(aes(x=density, y=mean_HU)) +
geom_errorbar(aes(ymin = mean_HU-SD, ymax=mean_HU+SD), width=0.2)
g_curve
g_curve <- ggplot(data, aes(x=density, y = HU)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1) +
geom_point(data=data_summary, aes(x=density, y=mean_HU))
g_curve
g_curve <- ggplot(data, aes(x=density, y = HU)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1) +
geom_point(data=data_summary, aes(x=density, y=mean_HU)) +
geom_errorbar(data=data_summary, aes(ymin = -SD, ymax=+SD), width=0.2)
g_cruve
g_curve
g_curve <- ggplot(data, aes(x=density, y = HU)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1) +
geom_point(data=data_summary, aes(x=density, y=mean_HU)) +
geom_errorbar(aes(ymin =mean_HU -SD, ymax=mean_HU+SD), width=0.2)
g_curve
View(data_summary)
g_curve <- ggplot(data, aes(x=density, y = HU)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1) +
geom_point(data_summary, aes(x=density, y=mean_HU)) +
geom_errorbar(data_summary, aes(ymin =mean_HU -SD, ymax=mean_HU+SD), width=0.2)
data <- rbind(data1, data2)
data_summary <- data %>% group_by(density, phantom) %>% summarise(mean_HU = mean(HU), variance = var(HU), SD = sd(HU), N = length(HU)) %>%
mutate(t=qt(0.975, N-1)) %>%
mutate(CImax = mean_HU +t*SD/sqrt(N)) %>%
mutate(CImin = mean_HU -t*SD/sqrt(N))
g_boxplot <- ggplot(data, aes(x = factor(density), y = HU)) +
geom_boxplot(aes(fill=phantom)) +
labs(x = 'Mineral density [mgHA/cm³]', y = 'Houndsfield Unit')
g_curve <- ggplot(data, aes(x=density, y = HU)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1) +
geom_point(data = data_summary, aes(x=density, y=mean_HU)) +
geom_errorbar(data = data_summary, aes(ymin =mean_HU -SD, ymax=mean_HU+SD), width=0.2)
g_curve
View(data_summary)
g_curve <- ggplot(data, aes(x=density, y = HU)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1) +
geom_point(data = data_summary, aes(x=density, y=mean_HU)) +
geom_errorbar(data = data_summary, aes(ymin =mean_HU -SD, ymax=mean_HU+SD), width=0.2)
geom_curve
g_curve
g_curve <- ggplot(data, aes(x=density)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1, aes(y=HU)) +
geom_point(data = data_summary, aes(x=density, y=mean_HU)) +
geom_errorbar(data = data_summary, aes(ymin =mean_HU -SD, ymax=mean_HU+SD), width=0.2)
g_curve
View(data_summary)
g_curve <- ggplot(data, aes(x=density)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1, aes(y=HU, color=phantom)) +
geom_point(data = data_summary, aes(x=density, y=mean_HU, color=phantom)) +
geom_errorbar(data = data_summary, aes(ymin =mean_HU -SD, ymax=mean_HU+SD,color=phantom), width=0.2)
g_curve
g_curve <- ggplot(data, aes(x=density, color=phantom)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1, aes(y=HU)) +
geom_point(data = data_summary, aes(x=density, y=mean_HU)) +
geom_errorbar(data = data_summary, aes(ymin =mean_HU -SD, ymax=mean_HU+SD), width=0.2)
g_curve
boxplot
g_boxplot
fit<-lm(data, density~HU)
fit<-data %>% filter(phantom==EFP_SharpKernel) %>% lm(density ~HU)
fit<-data %>% filter(phantom=='EFP_SharpKernel') %>% lm(density ~HU)
?lm
tmp = data %>% filter(phantom=='EFP_SharpKernel')
View(tmp)
fit<- lm(density~HU)
fit<- lm(tmp, density~HU)
fit<- lm(data = tmp, density~HU)
fit<- lm(data = data, density~HU)
fit
fit<- lm(data = data %>% group_by(phantom), density~HU)
fit
fitSharp <- lm(data = data %>% filter(phantom=='SharpKernel', density~HU))
fitSharp <- lm(data = data %>% filter(phantom=='SharpKernel'), density~HU)
View(data)
fitSharp <- lm(data = data %>% filter(phantom=='EFP_SharpKernel'), density~HU)
fitWide <- lm(data = data %>% filter(phantom=='EFP_WideKernel'), density~HU)
fitSharp$residuals
fitSharp$coefficients
fitWide$coefficients
summary(fitSharp)$r.squared
summary(fitWide)$r.squared
d <- read.table('test.txt')
d <- read.table('../test.txt')
View(d)
fitWide$coefficients[1]
fitWide$coefficients[1]*2
d_bmd <- 16.0076583+0.5686449*d
d_bmd<-as.data.frame(d_bmd)
View(d_bmd)
colnames(d_bmd)<-bmd
colnames(d_bmd)<-'bmd'
ggplot(d_bmd)+geom_histogram()
histogram(d_bmd)
hist(d_bmd)
hist(as.numeric(d_bmd))
View(d_bmd)
min(d_bmd)
max(d_bmd)
ggplot(d_bmd, aes(x=bmd))+ geom_histogram()
ggplot(d_bmd, aes(x=bmd))+ geom_histogram(binwidth=10)
mean(d_bmd)
mean(d_bmd$bmd)
mean(d)
View(d)
mean(d$V1)
fitSharp$coefficients
g_curve
g_boxplot
source("~/PCCT_analysis/data_processing_code/phantoms/phantom_calibration.R")
fit<- lm(data %>% filter(phantom="EFP_SharpKernel"), x = HU, y = density)
View(data)
fit<- lm(data %>% filter(phantom="EFP_SharpKernel"), density~HU)
fit<- lm(data %>% filter(phantom=="EFP_SharpKernel"), x = HU, y = density)
fit<- lm(data %>% filter(phantom=="EFP_SharpKernel"), density~HU)
fit<- lm(data1, density~HU)
fit<- lm(data1, y=density, x=HU)
fit<- lm(density~HU, data=data1)
fit
x = seq(0,1000,0.1)
y = 16.0077+0.5686*x
d = data.frame(x,y)
View(d)
g_curve + geom_line(data=d, aes(x=x,y=y) color=green)
g_curve
g_curve + geom_line(data=d, aes(x=x,y=y) color=green)
g_curve + geom_line(data=d, aes(x=x,y=y))
d$phantom='none'
View(d)
g_curve + geom_line(data=d, aes(x=x,y=y))
g_curve <- ggplot(data, aes(y=density, color=phantom)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1, aes(x=HU)) +
geom_point(data = data_summary, aes(y=density, x=mean_HU))
g_curve + geom_line(data=d, aes(x=x,y=y))
g_curve <- ggplot(data1, aes(x=density)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1, aes(y=HU)) +
geom_point(data = data_summary, aes(x=density, y=mean_HU))
geom_errorbar(data = data_summary, aes(ymin =mean_HU -SD, ymax=mean_HU+SD), width=0.2)
g_curve
View(data_summary)
g_curve <- ggplot(data  %>% filter(phantom=='EFP_SharpKernel'), aes(x=density)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1, aes(y=HU)) +
geom_point(data = data_summary %>% filter(phantom=='EFP_SharpKernel'), aes(x=density, y=mean_HU))
geom_errorbar(data = data_summary  %>% filter(phantom=='EFP_SharpKernel'), aes(ymin =mean_HU -SD, ymax=mean_HU+SD), width=0.2)
View(data_summary)
g_curve
View(data_summary)
g_curve <- ggplot(data  %>% filter(phantom=='EFP_SharpKernel'), aes(x=density)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1, aes(y=HU)) +
geom_point(data = data_summary %>% filter(phantom=='EFP_SharpKernel'), aes(y=mean_HU))
geom_errorbar(data = data_summary  %>% filter(phantom=='EFP_SharpKernel'), aes(ymin =mean_HU -SD, ymax=mean_HU+SD), width=0.2)
g_curve
g_curve <- ggplot(data  %>% filter(phantom=='EFP_SharpKernel'), aes(x=density)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1, aes(y=HU)) +
geom_point(data = data_summary %>% filter(phantom=='EFP_SharpKernel'), aes(y=mean_HU)) +
geom_errorbar(data = data_summary  %>% filter(phantom=='EFP_SharpKernel'), aes(ymin =mean_HU -SD, ymax=mean_HU+SD), width=0.2)
g_curve
g_curve <- ggplot(data  %>% filter(phantom=='EFP_SharpKernel'), aes(x=density)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1, aes(y=HU)) +
geom_point(data = data_summary %>% filter(phantom=='EFP_SharpKernel'), aes(y=mean_HU)) +
geom_errorbar(data = data_summary  %>% filter(phantom=='EFP_SharpKernel'), aes(ymin =mean_HU -SD, ymax=mean_HU+SD), width=50)
g_curve
g_curve <- ggplot(data  %>% filter(phantom=='EFP_SharpKernel'), aes(x=density)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1, aes(y=HU)) +
geom_point(data = data_summary %>% filter(phantom=='EFP_SharpKernel'), aes(y=mean_HU)) +
geom_errorbar(data = data_summary  %>% filter(phantom=='EFP_SharpKernel'), aes(ymin =mean_HU -SD, ymax=mean_HU+SD), width=10)
g_curve
g_boxplot
g_curve
View(data_summary)
source("~/PCCT_analysis/data_processing_code/phantoms/phantom_calibration.R")
fit1 <- lm(y~x, y = density, x=HU, data = data %>% filter(phantom=="EFP_SharpKernel"))
View(data)
fit1 <- lm(data = data %>% filter(phantom=="EFP_SharpKernel"), y~x, y = density, x=HU)
fit1 <- lm(density~HU, data = data %>% filter(phantom=="EFP_SharpKernel"))
sumfit <- summary(fit)
sumfit <- summary(fit1)
sumfit$coefficients
View(data_summary)
fit2 <- lm(density~mean_HU , data = data_summary %>% filter(phantom=="EFP_SharpKernel"))
sumfit2 <- summary(fit2)
sumfit2$coefficients
sumfit$r.squared
sumfit2$r.squared
?pt
sumfit2$df
sumfit$df
pt(0.4185177, df=1, lower.tail=FALSE)
pt(0.4185177, df=2, lower.tail=FALSE)
fit2
g_curve <- ggplot(data, aes(x=density, color=phantom)) +
geom_smooth(method = 'lm',se=FALSE, formula = y~x, size=1, aes(y=HU)) +
geom_point(data = data_summary, aes(y=mean_HU))
source("~/PCCT_analysis/data_processing_code/phantoms/phantom_calibration.R")
View(data_summary)
g_boxplot
g_curve
fitWide <- lm(density~HU, data=data %>% filter(phantom="EFP_WideKernel"))
fitWide <- lm(density~HU, data=data %>% filter(phantom=="EFP_WideKernel"))
fitSharp <- lm(density~HU, data=data %>% filter(phantom=="EFP_SharpKernel"))
fitWide_sum <- summary(fitWide)
fitSharp_sum <- summary(fitSharp)
fitWide_sum
fitSharp_sum
?linearHypothesis
?linearHypothesis
??linearHypothesis
library(car)
install.packages(car)
install.packages('car')
library(car)
?linearHypothesis
linearHypothesis(fitSharp, fitWide)
bsharp = coef(fitSharp)
bwide = coef(fitWide)
vcovSharp = vcov(fitSharp)
View(vcovSharp)
vcovWide = vcov(fitWide)
H <- cbind(bSharp-bWide)
H <- cbind(bsharp-bwide)
R <- matrix(0, nrow=length(bsharp), ncol=length(bwide))
test <- linearHypothesis(vcov1 + vcov2, H, R=R)
test <- linearHypothesis(vcovSharp + vcovWide, H, R=R)
test <- linearHypothesis(vcovSharp + vcovWide, H)
test <- linearHypothesis(vcovSharp + vcovWide, H)
test <- linearHypothesis(fitSharp, "coef.diff = coef(fitSharp) - coef(fitWide)")
test <- linearHypothesis(fitSharp, "fitSharp = fitWide")
test <- linearHypothesis(data, "fitSharp = fitWide")
?anova
anova(fitSharp, fitWide)
fitWide
identical(all.vars(formula(fitSharp)), all.vars(formula(fitWide)))
intercept_diff <- linearHypothesis(list("Intercept(fitSharp) - Intercept(fitWide) = 0"),
c("fitSharp", "fitWide"))
intercept_diff <- linearHypothesis(c("Intercept(fitSharp) - Intercept(fitWide) = 0"),
c("fitSharp", "fitWide"))
intercept_diff <- linearHypothesis("Intercept(fitSharp) - Intercept(fitWide) = 0",
c("fitSharp", "fitWide"))
intercept_diff <- linearHypothesis(fit1, "Intercept - Intercept", fit2)
intercept_diff <- linearHypothesis(fitSharp, "Intercept(fitSharp) - Intercept(fitWide)")
summary(intercept_diff)
fitWide_sum
fitSharp_sum
View(data2)
?t.test
View(data_summary)
View(data_summary)
data_summary %>% filter(density==50, phantom=='EFP_SharpKernel')
data_summary %>% filter(density==50, phantom=='EFP_SharpKernel') %>% select(SD)
data_summary %>% filter(density==50, phantom=='EFP_SharpKernel') %>% select(SD)[1]
tmp<- data_summary %>% filter(density==50, phantom=='EFP_SharpKernel') %>% select(SD)
tmp
tmp$SD
data_summary$SD
(data_summary %>% filter(density==50, phantom=='EFP_SharpKernel'))$SD
View(data_summary)
View(data_summary)
sharp = data_summary %>% filter(phantom=='SharpKernel')
wide = data_summary %>% filter(phantom=='EFP_WideKernel')
S = sqrt(sharp$variance / sharp$N + wide$variance/wide$N)
View(sharp)
View(wide)
sharp = data_summary %>% filter(phantom=='EFP_SharpKernel')
wide = data_summary %>% filter(phantom=='EFP_WideKernel')
S = sqrt(sharp$variance / sharp$N + wide$variance/wide$N)
DFS = (sharp$variance/sharp$N + wide$variance/wide$N)^2/((sharp$variance/sharp$N)^2/(sharp$N-1) + (wide$variance/wide$N)^2/(wide$N-1))
Tvals = (sharp$mean_HU - wide$mean_HU)/S
(93.26091-55.38176)/0.0844
(1364.67525-1384.62195)/0.1173
?pt
pt(Tvals, DFS)
pt(Tvals[0], DFS[0])
Tvals = abs((sharp$mean_HU - wide$mean_HU)/S)
View(data_summary)
Tvals[0]
Tvals(0)
Tvals
Tvals[1]
pt(Tvals[1], DFS[1], lower.tail=FALSE)
?t.test
d1 = data %>% filter(phantom=='EFP_SharpKernel', density=50)
d1 = data %>% filter(phantom=='EFP_SharpKernel', density==50)
d1 = data %>% filter(phantom=='EFP_SharpKernel', density==50)$HU
d1 = (data %>% filter(phantom=='EFP_SharpKernel', density==50))$HU
d2 = (data %>% filter(phantom=='EFP_WideKernel', density==50))$HU
t.test(d1,d2, alternative='two.sided', paired=TRUE, var.equal=FALSE)
t.test(d1,d2, alternative='two.sided', var.equal=FALSE)
d1 = (data %>% filter(phantom=='EFP_SharpKernel', density==100))$HU
d2 = (data %>% filter(phantom=='EFP_WideKernel', density==100))$HU
t.test(d1,d2, alternative='two.sided', var.equal=FALSE)
View(data_summary)
170.48153-161.49271
View(data_summary)
fitSharp
fitWide
fitWide$coefficients[1]
fitWide$coefficients[1]+3
linearHypothesis(model=fitSharp, "Intercept = 15.07806")
linearHypothesis(model=fitSharp, "HU = 0.5676")
?linearHypothesis
linearHypothesis(model=fitSharp, "(Intercept) = 15.0781")
linearHypothesis(model=fitWide, "(Intercept) = 15.0781")
linearHypothesis(model=fitWide, "(Intercept) = 16.077)
""
linearHypothesis(model=fitWide, "(Intercept) = 16.077")
?anova
g<-ggplot(data=data, aes(x=HU)) + geom_histogram(aes(fill=density)) + facet_grid(phantom~.)
g
g<-ggplot(data=data, aes(x=HU)) + geom_histogram(binwidth=20, aes(color=density)) + facet_grid(phantom~.)
g
head(data)
g<-ggplot(data=data, aes(x=HU, color=density)) + geom_histogram(binwidth=20) + facet_grid(phantom~.)
g
g<-ggplot(data=data, aes(x=HU, color=density)) + geom_histogram(binwidth=20,alpha=0.5) + facet_grid(phantom~.)
g
View(data)
g<-ggplot(data=data, aes(x=HU, color=factor(density)) + geom_histogram(binwidth=20) + facet_grid(phantom~.)
g<-ggplot(data=data, aes(x=HU, color=factor(density))) + geom_histogram(binwidth=20) + facet_grid(phantom~.)
g
g<-ggplot(data=data, aes(x=HU, fill=factor(density))) + geom_histogram(binwidth=20, position='dodge') + facet_grid(phantom~.)
g
g<-ggplot(data=data, aes(x=HU, fill=factor(density))) + geom_histogram(binwidth=20) + facet_grid(phantom~.)
g
g<-ggplot(data=data, aes(x=HU, fill=factor(density))) + geom_histogram(binwidth=10, position='dodge') + facet_grid(phantom~.)
g
g_boxplot
g_curve
fitSharp
source("~/PCCT_analysis/data_processing_code/phantoms/phantom_calibration.R")
fit <- lm(data=data %>% filter(phantom=='EFP_SharpKernel'), density~HU)
fit
rm(list=ls())
source("~/.active-rstudio-document")
